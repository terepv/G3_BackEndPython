"""Initial migration

Revision ID: 23133f86f05c
Revises: 
Create Date: 2025-04-19 04:27:16

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '23133f86f05c'
down_revision = None
branch_labels = None
depends_on = None

def upgrade() -> None:
    op.execute('''
CREATE TABLE public.comuna (
    id_comuna integer NOT NULL,
    comuna character varying NOT NULL,
    id_region integer NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.comuna ALTER COLUMN id_comuna ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.comuna_id_comuna_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.frecuencia (
    id_frecuencia integer NOT NULL,
    frecuencia character varying NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.frecuencia ALTER COLUMN id_frecuencia ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.frecuencia_id_frecuencia_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.medida (
    id_medida integer NOT NULL,
    id_tipo_medida integer NOT NULL,
    nombre_corto character varying NOT NULL,
    indicador character varying NOT NULL,
    formula_calculo character varying NOT NULL,
    id_frecuencia integer NOT NULL,
    id_organismo_sectorial integer NOT NULL,
    id_plan integer NOT NULL,
    desc_medio_de_verificacion character varying NOT NULL,
    id_tipo_dato integer NOT NULL,
    reporte_unico boolean DEFAULT false NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.medida ALTER COLUMN id_medida ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.medida_id_medida_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.medio_verificacion (
    nombre_archivo character varying NOT NULL,
    fecha_subida timestamp with time zone DEFAULT now() NOT NULL,
    archivo bytea NOT NULL,
    tamano bigint NOT NULL,
    id_reporte integer NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
CREATE TABLE public.opcion (
    id_opcion integer NOT NULL,
    opcion character varying NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.opcion ALTER COLUMN id_opcion ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.opcion_id_opcion_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.opcion_medida (
    id_opcion_medida integer NOT NULL,
    id_medida integer NOT NULL,
    id_opcion integer NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.opcion_medida ALTER COLUMN id_opcion_medida ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.opciones_medida_id_opcion_medida_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.organismo_sectorial (
    id_organismo_sectorial integer NOT NULL,
    organismo_sectorial character varying NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.organismo_sectorial ALTER COLUMN id_organismo_sectorial ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.organismo_sectorial_id_organismo_sectorial_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.plan (
    id_plan integer NOT NULL,
    nombre character varying NOT NULL,
    descripcion character varying NOT NULL,
    fecha_publicacion date DEFAULT now() NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
CREATE TABLE public.plan_comuna (
    id_plan_comuna integer NOT NULL,
    id_plan integer NOT NULL,
    id_comuna integer NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.plan_comuna ALTER COLUMN id_plan_comuna ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.plan_comuna_id_plan_comuna_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
ALTER TABLE public.plan ALTER COLUMN id_plan ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.plan_id_plan_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.region (
    id_region integer NOT NULL,
    region character varying NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.region ALTER COLUMN id_region ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.region_id_region_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.reporte (
    id_reporte integer NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying,
    id_organismo_sectorial integer NOT NULL,
    id_plan integer NOT NULL
);
''')
    op.execute('''
ALTER TABLE public.reporte ALTER COLUMN id_reporte ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reporte_id_reporte_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.reporte_medida (
    id_reporte_medida integer NOT NULL,
    id_reporte integer NOT NULL,
    id_medida integer NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.reporte_medida ALTER COLUMN id_reporte_medida ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reporte_medida_id_reporte_medida_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.resultado (
    id_reporte_medida integer NOT NULL,
    texto character varying,
    numerico real,
    si_no boolean,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying,
    id_opcion integer,
    id_resultado integer NOT NULL
);
''')
    op.execute('''
ALTER TABLE public.resultado ALTER COLUMN id_resultado ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.resultado_id_resultado_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.rol (
    id_rol integer NOT NULL,
    rol character varying NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
CREATE TABLE public.tipo_dato (
    id_tipo_dato integer NOT NULL,
    tipo_dato character varying NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.tipo_dato ALTER COLUMN id_tipo_dato ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tipo_dato_medida_id_tipo_dato_medida_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.tipo_medida (
    id_tipo_medida integer NOT NULL,
    tipo_medida character varying NOT NULL,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.tipo_medida ALTER COLUMN id_tipo_medida ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tipo_medida_id_tipo_medida_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
ALTER TABLE public.rol ALTER COLUMN id_rol ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tipo_usuario_id_tipo_usuario_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
CREATE TABLE public.usuario (
    id_usuario integer NOT NULL,
    nombre character varying NOT NULL,
    apellido character varying NOT NULL,
    email character varying NOT NULL,
    activo boolean DEFAULT true NOT NULL,
    id_rol integer NOT NULL,
    password character varying NOT NULL,
    id_organismo_sectorial integer,
    fecha_creacion timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    creado_por character varying NOT NULL,
    fecha_actualizacion timestamp without time zone,
    actualizado_por character varying,
    fecha_eliminacion timestamp without time zone,
    eliminado_por character varying
);
''')
    op.execute('''
ALTER TABLE public.usuario ALTER COLUMN id_usuario ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.usuario_id_usuario_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
''')
    op.execute('''
ALTER TABLE ONLY public.comuna ADD CONSTRAINT comuna_pk PRIMARY KEY (id_comuna);
''')
    op.execute('''
ALTER TABLE ONLY public.comuna ADD CONSTRAINT comuna_unique UNIQUE (comuna, fecha_eliminacion);
''')
    op.execute('''
ALTER TABLE ONLY public.frecuencia ADD CONSTRAINT frecuencia_pk PRIMARY KEY (id_frecuencia);
''')
    op.execute('''
ALTER TABLE ONLY public.frecuencia ADD CONSTRAINT frecuencia_unique UNIQUE (frecuencia, fecha_eliminacion);
''')
    op.execute('''
ALTER TABLE ONLY public.medida ADD CONSTRAINT medida_pk PRIMARY KEY (id_medida);
''')
    op.execute('''
ALTER TABLE ONLY public.medio_verificacion ADD CONSTRAINT medio_verificacion_pk PRIMARY KEY (id_reporte);
''')
    op.execute('''
ALTER TABLE ONLY public.opcion_medida ADD CONSTRAINT opcion_medida_unique UNIQUE (id_medida, id_opcion, fecha_eliminacion);
''')
    op.execute('''
ALTER TABLE ONLY public.opcion ADD CONSTRAINT opcion_pk PRIMARY KEY (id_opcion);
''')
    op.execute('''
ALTER TABLE ONLY public.opcion ADD CONSTRAINT opcion_unique UNIQUE (opcion, fecha_eliminacion);               
''')
    op.execute('''
ALTER TABLE ONLY public.opcion_medida ADD CONSTRAINT opciones_medida_pk PRIMARY KEY (id_opcion_medida);
''')
    op.execute('''
ALTER TABLE ONLY public.organismo_sectorial ADD CONSTRAINT organismo_sectorial_pk PRIMARY KEY (id_organismo_sectorial);
''')
    op.execute('''
ALTER TABLE ONLY public.organismo_sectorial ADD CONSTRAINT organismo_sectorial_unique UNIQUE (organismo_sectorial, fecha_eliminacion);
''')
    op.execute('''
ALTER TABLE ONLY public.plan_comuna ADD CONSTRAINT plan_comuna_pk PRIMARY KEY (id_plan_comuna);
''')
    op.execute('''
ALTER TABLE ONLY public.plan_comuna ADD CONSTRAINT plan_comuna_unique UNIQUE (id_plan, id_comuna, fecha_eliminacion);
''')
    op.execute('''
ALTER TABLE ONLY public.plan ADD CONSTRAINT plan_pk PRIMARY KEY (id_plan);
''')
    op.execute('''
ALTER TABLE ONLY public.region ADD CONSTRAINT region_pk PRIMARY KEY (id_region);
''')
    op.execute('''
ALTER TABLE ONLY public.region ADD CONSTRAINT region_unique UNIQUE (region, fecha_eliminacion);
''')
    op.execute('''
ALTER TABLE ONLY public.reporte_medida ADD CONSTRAINT reporte_medida_pk PRIMARY KEY (id_reporte_medida);
''')
    op.execute('''
ALTER TABLE ONLY public.reporte_medida ADD CONSTRAINT reporte_medida_unique UNIQUE (id_reporte, id_medida, fecha_eliminacion);
''')
    op.execute('''
ALTER TABLE ONLY public.reporte ADD CONSTRAINT reporte_pk PRIMARY KEY (id_reporte);
''')
    op.execute('''
ALTER TABLE ONLY public.resultado ADD CONSTRAINT resultado_pk PRIMARY KEY (id_resultado);
''')
    op.execute('''
ALTER TABLE ONLY public.resultado ADD CONSTRAINT resultado_unique UNIQUE (id_reporte_medida, fecha_eliminacion);
''')
    op.execute('''
ALTER TABLE ONLY public.rol ADD CONSTRAINT rol_pk PRIMARY KEY (id_rol);
''')
    op.execute('''
ALTER TABLE ONLY public.rol ADD CONSTRAINT rol_unique UNIQUE (rol, fecha_eliminacion);
''')
    op.execute('''
ALTER TABLE ONLY public.tipo_dato ADD CONSTRAINT tipo_dato_pk PRIMARY KEY (id_tipo_dato);
''')
    op.execute('''
ALTER TABLE ONLY public.tipo_dato ADD CONSTRAINT tipo_dato_unique UNIQUE (tipo_dato, fecha_eliminacion);
''')
    op.execute('''
ALTER TABLE ONLY public.tipo_medida ADD CONSTRAINT tipo_medida_pk PRIMARY KEY (id_tipo_medida);
''')
    op.execute('''
ALTER TABLE ONLY public.tipo_medida ADD CONSTRAINT tipo_medida_unique UNIQUE (fecha_eliminacion, tipo_medida);
''')
    op.execute('''
ALTER TABLE ONLY public.usuario ADD CONSTRAINT usuario_pk PRIMARY KEY (id_usuario);
''')
    op.execute('''
ALTER TABLE ONLY public.usuario ADD CONSTRAINT usuario_unique UNIQUE (email, fecha_eliminacion);
''')
    op.execute('''
CREATE FUNCTION public.evitar_editar_eliminados() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  RAISE EXCEPTION 'La acción no está permitida.';
END;
$$;
''')
    op.execute('''
CREATE FUNCTION public.validar_usuarios_auditoria() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
	IF NEW.creado_por IS NULL THEN
		RAISE EXCEPTION 'El campo creado_por no puede ser NULL';
	END IF;

	IF NEW.actualizado_por IS NULL AND NOT EXISTS (
		SELECT 1 FROM public.usuario
		WHERE email = NEW.creado_por
			AND activo = true
	) THEN
		RAISE EXCEPTION 'El campo creado_por (%) no existe o no está activo', NEW.creado_por;
	END IF;
	
	IF NEW.actualizado_por IS NOT NULL AND NEW.eliminado_por IS NULL THEN
		IF NOT EXISTS (
			SELECT 1 FROM public.usuario
			WHERE email = NEW.actualizado_por 
				AND activo = true
		) THEN
			RAISE EXCEPTION 'El campo actualizado_por (%) no existe o no está activo', NEW.actualizado_por;
		END IF;
	END IF;
	
	IF NEW.eliminado_por IS NOT NULL THEN
		IF NOT EXISTS (
			SELECT 1 FROM public.usuario
			WHERE email = NEW.eliminado_por AND activo = true
		) THEN
			RAISE EXCEPTION 'El campo eliminado_por (%) no existe o no está activo', NEW.eliminado_por;
		END IF;
	END IF;

	RETURN NEW;
END;
$$;
''')
    op.execute('''
CREATE FUNCTION public.validate_opcion_medida() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF EXISTS (
        SELECT 1
        FROM medida m
        JOIN tipo_dato td ON m.id_tipo_dato = td.id_tipo_dato
        WHERE m.id_medida = NEW.id_medida
          AND td.tipo_dato != 'Selección'
    ) THEN
        -- Lanzar un error si no cumple la condición
        RAISE EXCEPTION 'Solo se pueden registrar opciones para medidas con tipo de dato "Selección".';
    END IF;

    -- Si pasa la validación, permitir la inserción
    RETURN NEW;
END;
$$;
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.comuna FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.frecuencia FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.medida FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.medio_verificacion FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.opcion FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.opcion_medida FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.organismo_sectorial FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.plan FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.plan_comuna FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.region FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.reporte FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.reporte_medida FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.resultado FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.rol FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.tipo_dato FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.tipo_medida FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validar_usuarios_auditoria BEFORE INSERT OR UPDATE ON public.usuario FOR EACH ROW EXECUTE FUNCTION public.validar_usuarios_auditoria();
''')
    op.execute('''
CREATE TRIGGER trg_validate_opcion_medida BEFORE INSERT ON public.opcion_medida FOR EACH ROW EXECUTE FUNCTION public.validate_opcion_medida();
''')
    op.execute('''
ALTER TABLE ONLY public.comuna ADD CONSTRAINT comuna_fk FOREIGN KEY (id_region) REFERENCES public.region(id_region);
''')
    op.execute('''
ALTER TABLE ONLY public.medida ADD CONSTRAINT medida_fk_frecuencia FOREIGN KEY (id_frecuencia) REFERENCES public.frecuencia(id_frecuencia);
''')
    op.execute('''
ALTER TABLE ONLY public.medida ADD CONSTRAINT medida_fk_organismo_sectorial FOREIGN KEY (id_organismo_sectorial) REFERENCES public.organismo_sectorial(id_organismo_sectorial);
''')
    op.execute('''
ALTER TABLE ONLY public.medida ADD CONSTRAINT medida_fk_plan FOREIGN KEY (id_plan) REFERENCES public.plan(id_plan);
''')
    op.execute('''
ALTER TABLE ONLY public.medida ADD CONSTRAINT medida_fk_tipo_dato FOREIGN KEY (id_tipo_dato) REFERENCES public.tipo_dato(id_tipo_dato);
''')
    op.execute('''
ALTER TABLE ONLY public.medida ADD CONSTRAINT medida_fk_tipo_medida FOREIGN KEY (id_tipo_medida) REFERENCES public.tipo_medida(id_tipo_medida);
''')
    op.execute('''
ALTER TABLE ONLY public.medio_verificacion ADD CONSTRAINT medio_verificacion_fk_reporte FOREIGN KEY (id_reporte) REFERENCES public.reporte(id_reporte);
''')
    op.execute('''
ALTER TABLE ONLY public.opcion_medida ADD CONSTRAINT opcion_medida_fk_medida FOREIGN KEY (id_medida) REFERENCES public.medida(id_medida);
''')
    op.execute('''
ALTER TABLE ONLY public.opcion_medida ADD CONSTRAINT opcion_medida_fk_opcion FOREIGN KEY (id_opcion) REFERENCES public.opcion(id_opcion);
''')
    op.execute('''
ALTER TABLE ONLY public.plan_comuna ADD CONSTRAINT plan_comuna_fk_comuna FOREIGN KEY (id_comuna) REFERENCES public.comuna(id_comuna);
''')
    op.execute('''
ALTER TABLE ONLY public.plan_comuna ADD CONSTRAINT plan_comuna_fk_plan FOREIGN KEY (id_plan) REFERENCES public.plan(id_plan);
''')
    op.execute('''
ALTER TABLE ONLY public.reporte_medida ADD CONSTRAINT reporte_medida_medida_fk FOREIGN KEY (id_medida) REFERENCES public.medida(id_medida);
''')
    op.execute('''
ALTER TABLE ONLY public.reporte_medida ADD CONSTRAINT reporte_medida_reporte_fk FOREIGN KEY (id_reporte) REFERENCES public.reporte(id_reporte);
''')
    op.execute('''
ALTER TABLE ONLY public.reporte ADD CONSTRAINT reporte_organismo_sectorial_fk FOREIGN KEY (id_organismo_sectorial) REFERENCES public.organismo_sectorial(id_organismo_sectorial);
''')
    op.execute('''
ALTER TABLE ONLY public.reporte ADD CONSTRAINT reporte_plan_fk FOREIGN KEY (id_plan) REFERENCES public.plan(id_plan);
''')
    op.execute('''
ALTER TABLE ONLY public.resultado ADD CONSTRAINT resultado_opcion_fk FOREIGN KEY (id_opcion) REFERENCES public.opcion(id_opcion);
''')
    op.execute('''
ALTER TABLE ONLY public.resultado ADD CONSTRAINT resultado_reporte_medida_fk FOREIGN KEY (id_reporte_medida) REFERENCES public.reporte_medida(id_reporte_medida);
''')
    op.execute('''
ALTER TABLE ONLY public.usuario ADD CONSTRAINT usuario_fk_rol FOREIGN KEY (id_rol) REFERENCES public.rol(id_rol);
''')
    op.execute('''
ALTER TABLE ONLY public.usuario ADD CONSTRAINT usuario_organismo_sectorial_fk FOREIGN KEY (id_organismo_sectorial) REFERENCES public.organismo_sectorial(id_organismo_sectorial);
''')


def downgrade() -> None:
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.comuna;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.frecuencia;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.medida;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.medio_verificacion;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.opcion;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.opcion_medida;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.organismo_sectorial;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.plan;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.plan_comuna;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.region;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.reporte;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.reporte_medida;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.resultado;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.rol;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.tipo_dato;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.tipo_medida;")
    op.execute("DROP TRIGGER IF EXISTS trg_validar_usuarios_auditoria ON public.usuario;")

    op.execute("DROP FUNCTION IF EXISTS public.validate_opcion_medida;")
    op.execute("DROP FUNCTION IF EXISTS public.validar_usuarios_auditoria;")
    op.execute("DROP FUNCTION IF EXISTS public.evitar_editar_eliminados;")

    op.execute("DROP TABLE IF EXISTS public.usuario;")
    op.execute("DROP TABLE IF EXISTS public.tipo_medida;")
    op.execute("DROP TABLE IF EXISTS public.tipo_dato;")
    op.execute("DROP TABLE IF EXISTS public.rol;")
    op.execute("DROP TABLE IF EXISTS public.resultado;")
    op.execute("DROP TABLE IF EXISTS public.reporte_medida;")
    op.execute("DROP TABLE IF EXISTS public.reporte;")
    op.execute("DROP TABLE IF EXISTS public.region;")
    op.execute("DROP TABLE IF EXISTS public.plan_comuna;")
    op.execute("DROP TABLE IF EXISTS public.plan;")
    op.execute("DROP TABLE IF EXISTS public.organismo_sectorial;")
    op.execute("DROP TABLE IF EXISTS public.opcion_medida;")
    op.execute("DROP TABLE IF EXISTS public.opcion;")
    op.execute("DROP TABLE IF EXISTS public.medio_verificacion;")
    op.execute("DROP TABLE IF EXISTS public.medida;")
    op.execute("DROP TABLE IF EXISTS public.frecuencia;")
    op.execute("DROP TABLE IF EXISTS public.comuna;")
